version: '3'

services:
#  db:
#    container_name: mariadb
#    image: mariadb:${MARIADB_VERSION}
#    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
#    restart: always
#    volumes:
#      - ./datadir/mariadb:/var/lib/mysql
#      - ./datadir/nextcloud/bucket:/var/www/html/data:rshared
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#    env_file:
#      - db.env
#
#  redis:
#    container_name: redis
#    image: redis:${REDIS_VERSION}
#    restart: always
#
  s3fs:
    container_name: s3fs
    build:
      context: ./s3fsnextcloud
      args:
        S3FS_VERSION: ${S3FS_VERSION}
    image: nelisvolschenk/s3fsnextcloud:${S3FS_VERSION}
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/fuse
    volumes:
      - datadir/nextcloud/bucket:/opt/s3fs/bucket:rshared
    environment:
      AWS_S3_MOUNT: /opt/s3fs/bucket
      S3FS_ARGS: ''
      S3FS_DEBUG: 0
      UID: 1000
      GID: 1000
    env_file:
      - storage.env

#  app:
#    container_name: nextcloud
#    build:
#      context: ./nextcloud
#      args:
#        IMG: nextcloud:${NEXTCLOUD_VERSION}
#    image: my_nextcloud:${NEXTCLOUD_VERSION}
#    restart: always
#    volumes:
#      - ./datadir/nextcloud/main:/var/www/html:rshared
#      - ./datadir/nextcloud/bucket/data:/var/www/html/data:rshared
#    environment:
#      - MYSQL_HOST=db
#      - REDIS_HOST=redis
#    env_file:
#      - db.env
#    depends_on:
#      - db
#      - redis
#
#  web:
#    container_name: web
#    build: ./web
#    restart: always
#    volumes:
#      - ./datadir/nextcloud/main:/var/www/html:ro
#      - ./datadir/nextcloud/bucket/data:/var/www/html/data:ro
#    env_file:
#      - web.env
#    depends_on:
#      - app
#    networks:
#      - proxy-tier
#      - default
#
#  cron:
#    container_name: cron
#    image: my_nextcloud:${NEXTCLOUD_VERSION}
#    restart: always
#    volumes:
#      - ./datadir/nextcloud/main:/var/www/html:rshared
#      - ./datadir/nextcloud/bucket/data:/var/www/html/data:rshared
#    entrypoint: /cron.sh
#    depends_on:
#      - db
#      - redis

#  proxy:
#    container_name: proxy
#    build: ./proxy
#    restart: always
#    ports:
#      - 80:80
#      - 443:443
#    labels:
#      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
#    volumes:
#      - ./datadir/proxy/certs:/etc/nginx/certs:ro
#      - ./datadir/proxy/vhost.d:/etc/nginx/vhost.d
#      - ./datadir/proxy/html:/usr/share/nginx/html
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#    networks:
#      - proxy-tier
#
#  letsencrypt-companion:
#    container_name: letsencryptcompanion
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    restart: always
#    volumes:
#      - ./datadir/proxy/certs:/etc/nginx/certs
#      - ./datadir/proxy/vhost.d:/etc/nginx/vhost.d
#      - ./datadir/proxy/html:/usr/share/nginx/html
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    networks:
#      - proxy-tier
#    depends_on:
#      - proxy

# self signed
#  omgwtfssl:
#    image: paulczar/omgwtfssl
#    restart: "no"
#    volumes:
#      - certs:/certs
#    environment:
#      - SSL_SUBJECT=servhostname.local
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/servhostname.local.key
#      - SSL_CSR=/certs/servhostname.local.csr
#      - SSL_CERT=/certs/servhostname.local.crt
#    networks:
#      - proxy-tier

networks:
  proxy-tier:
